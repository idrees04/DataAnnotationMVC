@model DataAnnotationMVC.Models.Employee

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


@*DATA ANNOTATIONS IN ASP.NET MVC
    The MVC Framework provides several data annotations that you can apply as attributes to a model.
    These data annotations implement tasks that are commonly required across applications
        REQUIRED DATA ANNOTATION
    The Required data annotation specifies that the property, with which this annotation is associated, is a required property.
    This attribute raises a validation error if the property value is null or empty.
    Following is the syntax of the Required data annotation:

*@






@using (Html.BeginForm())
{
    <p>
        @Html.LabelFor(model => model.EmployeeId)&nbsp; @Html.TextBoxFor(model => model.EmployeeId, "", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
    </p>
    <p>
        @Html.LabelFor(model => model.EmployeeName)&nbsp; @Html.TextBoxFor(model => model.EmployeeName, "", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
    </p>
    <p>
        @Html.LabelFor(model => model.EmployeeAge)&nbsp; @Html.TextBoxFor(model => model.EmployeeAge, "", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EmployeeAge, "", new { @class = "text-danger" })
    </p>
    <p>
        @Html.LabelFor(model => model.EmployeeGender)&nbsp; @Html.TextBoxFor(model => model.EmployeeGender, "", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EmployeeGender, "", new { @class = "text-danger" })
    </p>
    <p>
        @Html.LabelFor(model => model.EmployeeEmail)&nbsp; @Html.TextBoxFor(model => model.EmployeeEmail, "", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EmployeeEmail, "", new { @class = "text-danger" })
    </p>

    <p>
        @Html.LabelFor(model => model.EmployeePasswoerd)&nbsp; @Html.TextBoxFor(model => model.EmployeePasswoerd, "", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EmployeePasswoerd, "", new { @class = "text-danger" })
    </p>
    <p>
        @Html.LabelFor(model => model.EmployeeConfirmPasswoerd)&nbsp; @Html.TextBoxFor(model => model.EmployeeConfirmPasswoerd, "", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EmployeeConfirmPasswoerd, "", new { @class = "text-danger" })
    </p>

    <input type="submit" value="Submit" class="btn btn-info" />
    @*@ViewData["SuccessMessage"]
        if we want to genrate script then we will add raw class e.g
         @Html.Raw(ViewData["SuccessMessage"])
    *@


    @Html.Raw(ViewData["SuccessMessage"])
}
